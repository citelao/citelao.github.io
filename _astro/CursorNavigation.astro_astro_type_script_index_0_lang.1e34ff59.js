const k=document.querySelectorAll('[data-type="cursor-demo"]');k.forEach(o=>{const y=parseInt(o.dataset.focusedindex),C=o.querySelector("[data-cursorstatus]"),w=o.querySelector("canvas"),p=w.getContext("2d"),h=(s,t)=>{const e=o.getBoundingClientRect(),a=e.width,n=e.height;w.height=n,w.width=a,p.clearRect(0,0,a,n),t==="x"?p.fillRect(s,0,1,n):p.fillRect(0,s,a,1)},d=o.querySelectorAll("button"),g=(s,t,e)=>{const n=s.getBoundingClientRect()[t==="up"||t==="down"?"top":"left"];console.log("projectButton",s,t,e,n);let i=null,u=1/0;return d.forEach(c=>{if(c===s)return;const f=c.getBoundingClientRect(),r=f[t==="up"||t==="down"?"top":"left"],l=f[t==="up"||t==="down"?"left":"top"],R=f[t==="up"||t==="down"?"width":"height"],x=e>=l&&e<=l+R;if(console.log("doesIntersect",x,e,r,R,l,c),!x)return;const B=Math.abs(r-n),I=t==="up"&&r<n||t==="down"&&r>n||t==="left"&&r<n||t==="right"&&r>n;B<u&&I&&(i=c,u=B)}),i};d.forEach((s,t)=>{t===y?s.tabIndex=0:s.tabIndex=-1,s.addEventListener("focus",()=>{o.dataset.focusedindex=t.toString(),d.forEach((e,a)=>{t===a?e.tabIndex=0:e.tabIndex=-1})}),s.addEventListener("click",()=>{o.dataset.focusedindex=t.toString(),d.forEach((e,a)=>{t===a?e.tabIndex=0:e.tabIndex=-1})}),s.addEventListener("keydown",e=>{const a=o.dataset.cursordir,n=e.key==="ArrowRight"||e.key==="ArrowLeft"?"y":"x";let i=parseInt(o.dataset.cursorpos);if(n!==a){const f=o.getBoundingClientRect()[n],r=s.getBoundingClientRect()[n],l=s.getBoundingClientRect()[n==="x"?"width":"height"];i=r-f+l/2}const u=i+(n==="x"?o.getBoundingClientRect().left:o.getBoundingClientRect().top);let c=null;e.key==="ArrowRight"?c=g(s,"right",u):e.key==="ArrowLeft"?c=g(s,"left",u):e.key==="ArrowDown"?c=g(s,"down",u):e.key==="ArrowUp"&&(c=g(s,"up",u)),c&&(e.preventDefault(),c.focus()),o.dataset.cursordir=n,o.dataset.cursorpos=i.toFixed(0),C.innerText=`${o.dataset.cursorpos}${o.dataset.cursordir}`,h(i,n)})})});
